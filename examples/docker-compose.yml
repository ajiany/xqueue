version: '3.8'

services:
  # Redis 服务
  redis:
    image: redis:7-alpine
    container_name: xqueue-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - xqueue-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # MQTT Broker (Mosquitto)
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: xqueue-mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log
    networks:
      - xqueue-network
    healthcheck:
      test: ["CMD", "mosquitto_pub", "-h", "localhost", "-t", "test", "-m", "test"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Kafka (可选)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: xqueue-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - xqueue-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: xqueue-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - xqueue-network
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  # XQueue 服务
  xqueue:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: xqueue-server
    depends_on:
      redis:
        condition: service_healthy
      mosquitto:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - REDIS_ADDR=redis:6379
      - MQTT_BROKER=tcp://mosquitto:1883
      - KAFKA_BROKERS=kafka:9092
      - SERVER_PORT=8080
      - LOG_LEVEL=info
    networks:
      - xqueue-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
  mosquitto_data:
  mosquitto_log:
  zookeeper_data:
  zookeeper_logs:
  kafka_data:

networks:
  xqueue-network:
    driver: bridge 